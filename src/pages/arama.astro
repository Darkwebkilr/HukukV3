---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

// Helper function to fetch all items from a paginated WordPress API endpoint
async function fetchAllFromWp(endpoint) {
  let allItems = [];
  let page = 1;
  let totalPages = 1;
  while (page <= totalPages) {
    const response = await fetch(`${endpoint}?per_page=100&page=${page}&_embed`);
    const totalPagesHeader = response.headers.get('X-WP-TotalPages');
    if (totalPagesHeader) {
      totalPages = parseInt(totalPagesHeader, 10);
    }
    const items = await response.json();
    if (items && items.length > 0) {
      allItems = allItems.concat(items);
    } else {
      break;
    }
    page++;
  }
  return allItems;
}

// Helper function to decode HTML entities for titles, etc.
function decode(str: string) {
    if (!str) return '';
    return str.replace(/&#(\d+);/g, (match, dec) => String.fromCharCode(dec));
}

// Helper function to strip HTML tags for searching in content/excerpt
function stripHtml(html: string) {
    if (!html) return '';
    return html.replace(/<[^>]*>?/gm, '');
}

const query = Astro.url.searchParams.get('q');
let filteredPosts = [];

if (query) {
  // Fetch all data needed for the search
  const [posts, allCategories] = await Promise.all([
    fetchAllFromWp('https://n6j.7b0.myftpupload.com/wp-json/wp/v2/posts'),
    fetchAllFromWp('https://n6j.7b0.myftpupload.com/wp-json/wp/v2/categories')
  ]);

  const arastirmalarParent = allCategories.find(c => c.slug === 'arastirmalar');
  const arastirmalarParentId = arastirmalarParent ? arastirmalarParent.id : null;
  const researchCategoryIds = arastirmalarParentId
    ? allCategories.filter(c => c.parent === arastirmalarParentId).map(c => c.id)
    : [];

  // Process all posts into a unified search format
  const allContent = posts.map(post => {
    const postIsResearch = post.categories.some(catId => researchCategoryIds.includes(catId));
    let type = 'blog';
    let url = `/blog/${post.slug}`;

    if (postIsResearch) {
      const categoryId = post.categories.find(catId => researchCategoryIds.includes(catId));
      const categoryDetails = allCategories.find(c => c.id === categoryId);
      if (categoryDetails) {
        type = 'arastirmalar';
        url = `/arastirmalar/${categoryDetails.slug}/${post.slug}`;
      }
    }

    return {
      title: decode(post.title.rendered),
      description: stripHtml(decode(post.excerpt.rendered)),
      content: stripHtml(decode(post.content.rendered)),
      url: url,
      type: type,
      pubDate: new Date(post.date),
      heroImage: post._embedded?.['wp:featuredmedia']?.[0]?.source_url
    };
  });

  const lowerCaseQuery = query.toLocaleLowerCase('tr-TR');
  
  filteredPosts = allContent.filter((post) => {
    return post.title.toLocaleLowerCase('tr-TR').includes(lowerCaseQuery) ||
           post.description.toLocaleLowerCase('tr-TR').includes(lowerCaseQuery) ||
           post.content.toLocaleLowerCase('tr-TR').includes(lowerCaseQuery);
  });
}

function formatDate(date: Date): string {
  return date.toLocaleDateString('tr-TR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout title={`Arama Sonuçları: ${query || ''}`}>
  <div class="min-h-screen bg-gray-50" style='font-family: "Public Sans", "Noto Sans", sans-serif;'>
    <Header />

    <main class="max-w-6xl mx-auto px-4 py-12">
      <div class="bg-white p-8 rounded-xl shadow-lg">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Arama Sonuçları</h1>
        {query ? (
          <p class="text-lg text-gray-600 mb-8">
            "<span class="font-semibold">{query}</span>" için bulunan sonuçlar:
          </p>
        ) : (
          <p class="text-lg text-gray-600 mb-8">Lütfen bir arama terimi girin.</p>
        )}

        {query && (
          <div>
            {filteredPosts.length > 0 ? (
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                {filteredPosts.map((post) => (
                  <a href={post.url} class="block hover:text-blue-600 transition-colors group">
                    <article class="bg-gray-50 rounded-xl shadow-md overflow-hidden h-full group-hover:shadow-lg transition-shadow">
                      {post.heroImage && (
                        <div class="aspect-video overflow-hidden">
                          <img 
                            src={post.heroImage} 
                            alt={post.title}
                            class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                          />
                        </div>
                      )}
                      <div class="p-6 flex flex-col">
                        <h2 class="text-xl font-bold text-gray-900 mb-3 line-clamp-2 group-hover:text-blue-600 transition-colors" set:html={post.title}>
                        </h2>
                        <p class="text-gray-600 mb-4 line-clamp-3 text-sm" set:html={post.description}>
                        </p>
                        <div class="flex items-center justify-between text-sm text-gray-500 mt-auto">
                          <span class="inline-block px-3 py-1 text-xs font-semibold text-purple-600 bg-purple-100 rounded-full">
                            {post.type === 'blog' ? 'BLOG' : 'ARAŞTIRMA'}
                          </span>
                          <time>{formatDate(post.pubDate)}</time>
                        </div>
                      </div>
                    </article>
                  </a>
                ))}
              </div>
            ) : (
              <div class="text-center py-16">
                <p class="text-xl text-gray-500">Aradığınız kriterlere uygun sonuç bulunamadı.</p>
              </div>
            )}
          </div>
        )}
      </div>
    </main>

    <Footer />
  </div>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>